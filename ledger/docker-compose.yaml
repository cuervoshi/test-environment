version: "3.8"
services:
  ledger:
    image: lawallet/ledger
    container_name: ledger
    environment:
      MODULE_NAME: ledger
      DEBUG: ndk:*,ledger:*
      PORT: 3000
      NODE_ENV: production
      DATABASE_URL: postgresql://lawallet:lawallet@ledger-db/lawallet-extension
      NOSTR_RELAYS: ws://nostream:8008
      NOSTR_WRITE_RELAY: ws://nostream:8008
      NOSTR_PRIVATE_KEY: ${LEDGER_PRIVATE_KEY}
      NOSTR_PUBLIC_KEY: ${LEDGER_PUBLIC_KEY}
      MINTER_PUBLIC_KEY: ${URLX_PUBLIC_KEY}
    depends_on:
      ledger-db:
        condition: service_healthy
      ledger-migrate:
        condition: service_completed_successfully
      nostream:
        condition: service_healthy
  ledger-db:
    image: postgres:15
    container_name: ledger-db
    restart: always
    environment:
      MODULE_NAME: ledger
      DEBUG: ndk:*,ledger:*
      PORT: 3000
      DATABASE_HOST: localhost
      POSTGRES_USER: lawallet
      POSTGRES_PASSWORD: lawallet
      POSTGRES_DB: lawallet
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lawallet"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 360s
  ledger-migrate:
    image: node:18-alpine3.16
    container_name: ledger-migrate
    environment:
      DATABASE_URL: postgresql://lawallet:lawallet@ledger-db/lawallet-extension
    entrypoint: [ 'sh', '-c', 'cd code && npm install --no-save --quiet prisma@5.2.0 && npx prisma migrate deploy']
    volumes:
      - ./prisma:/code/prisma
    depends_on:
      ledger-db:
        condition: service_healthy
  ledger-seed:
    image: node:18-alpine3.16
    container_name: ledger-seed
    profiles:
      - seed
    environment:
      DATABASE_URL: postgresql://lawallet:lawallet@ledger-db/lawallet-extension
    entrypoint: [ 'sh', '-c', 'cd code && npm install --no-save --quiet prisma@5.2.0 && npx prisma generate && npx --yes ts-node --esm -O {\"module\":\"es2020\"} prisma/seed.mts']
    volumes:
      - ./prisma:/code/prisma
    depends_on:
      ledger-db:
        condition: service_healthy
      ledger-migrate:
        condition: service_completed_successfully
